{"version":3,"sources":["Navigation.js","Setting.js","PrevButton.js","NextButton.js","Pagination.js","App.js","index.js"],"names":["_","require","classNames","Navigation","_ref","arrPages","page","_ref$state","state","withInfo","changedView","togglePages","react_default","a","createElement","Fragment","map","pagen","index","className","active","key","uniqueId","onClick","value","additionalInfo","length","Setting","toggleSetting","toggleButtonsChangedQuantity","perPage","name","onChange","type","event","PrevButton","togglePrevNext","prevDisable","disabled","NextButton","nextDisabled","Pagination","_this$props","_this","props","onPerPageChange","preparedArrPages","setState","_this$props2","onPageChange","target","_this$props3","_this$state","previousPrevButton","nextPrevButton","previousNextButton","nextNextButton","_ref2","_ref3","_this$props4","this","total","Array","Math","ceil","fill","p","concat","_this$state2","_this$props5","src_Setting","aria-label","src_PrevButton","src_Navigation","src_NextButton","React","Component","App","changedPage","src_Pagination","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.89d153ab.chunk.js","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nlet _ = require('lodash');\nconst classNames = require('classnames');\n\nconst Navigation = ({\n  arrPages,\n  page,\n  state: {\n    withInfo,\n    changedView,\n  },\n  togglePages,\n}) => (\n  <>\n    {\n      arrPages.map((pagen, index) => (\n        changedView\n          ? (\n            <>\n              {\n                index === 0 && (\n                  <li\n                    className={\n                      classNames('page-item', 'item',\n                        { active: index === page })\n                    }\n                    key={_.uniqueId('key_')}\n                  >\n                    <input\n                      onClick={() => togglePages(index)}\n                      className=\"page-link\"\n                      value={index + 1}\n                    />\n                    {withInfo && <div className=\"addInfo\">{pagen.additionalInfo}</div>}\n                  </li>\n                )\n              }\n\n              {\n                index === page - 2\n                  && arrPages.length > 3\n                  && index !== 0\n                  && <p>...</p>\n              }\n\n              {\n                (index === page\n                  || index === page - 1\n                  || index === page + 1)\n                    && (index !== 0 && index !== arrPages.length - 1)\n                  && (\n                    <li\n                      className={classNames('page-item', 'item',\n                        { active: index === page })\n                      }\n                      key={_.uniqueId('key_')}\n                    >\n                      <input\n                        onClick={() => togglePages(index)}\n                        className=\"page-link\"\n                        value={index + 1}\n                      />\n                      {withInfo && <div className=\"addInfo\">{pagen.additionalInfo}</div>}\n                    </li>\n                  )\n              }\n\n              {\n                index === page + 2\n                  && arrPages.length > 3\n                  && index !== arrPages.length - 1\n                  &&  <p>...</p>\n              }\n\n              {\n                index === arrPages.length - 1 && (\n                  <li\n                    className={classNames('page-item', 'item',\n                      { active: index === page })\n                    }\n                    key={_.uniqueId('key_')}\n                  >\n                    <input\n                      onClick={() => togglePages(index)}\n                      className=\"page-link\"\n                      value={index + 1}\n                    />\n                    {withInfo && <div className=\"addInfo\">{pagen.additionalInfo}</div>}\n                  </li>\n                )\n              }\n            </>\n          )\n          : (\n            <li\n              className={classNames('page-item', 'item',\n                { active: index === page })\n              }\n              key={_.uniqueId('key_')}\n            >\n              <input\n                onClick={() => togglePages(index)}\n                className=\"page-link\"\n                value={index + 1}\n              />\n              {withInfo && (\n                <div className=\"addInfo\">\n                  {pagen.additionalInfo}\n                </div>\n              )}\n            </li>\n          )\n      ))\n    }\n  </>\n);\n\nNavigation.propTypes = {\n  arrPages: PropTypes.arrayOf(\n    PropTypes.shape({\n      additionalInfo: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n  page: PropTypes.number.isRequired,\n  state: PropTypes.shape({\n    withInfo: PropTypes.func,\n    changedView: PropTypes.func,\n  }).isRequired,\n  togglePages: PropTypes.func.isRequired,\n};\n\nexport default Navigation;\n","import React from 'react';\n\nconst Setting = ({ toggleSetting, toggleButtonsChangedQuantity, perPage }) => (\n  <div className=\"toggle-setting\">\n    <p>Show how many elements on page:</p>\n    <input\n      name=\"withInfo\"\n      onChange={toggleSetting}\n      type=\"checkbox\"\n      className=\"with-info\"\n    />\n\n    <p>Quantity elements on page:</p>\n    <select\n      onChange={event => toggleButtonsChangedQuantity(event)}\n      value={perPage}\n      className=\"repPage\"\n    >\n      <option value={3}>3</option>\n      <option value={5}>5</option>\n      <option value={10}>10</option>\n      <option value={20}>20</option>\n    </select>\n\n    <p className=\"change-view\">Change view:</p>\n    <input\n      name=\"changeView\"\n      onChange={toggleSetting}\n      type=\"checkbox\"\n      className=\"with-info\"\n    />\n  </div>\n);\n\nexport default Setting;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nconst PrevButton = ({\n  togglePrevNext,\n  prevDisable,\n  page,\n}) => (\n  <li className={classNames('page-item', { disabled: prevDisable })}>\n    <input\n      name=\"previous\"\n      onClick={event => togglePrevNext(event, page - 1)}\n      className=\"page-link\"\n      type=\"button\"\n      value=\"Previous\"\n    />\n  </li>\n);\n\nPrevButton.propTypes = {\n  togglePrevNext: PropTypes.func.isRequired,\n  prevDisable: PropTypes.bool.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport default PrevButton;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nconst NextButton = ({\n  togglePrevNext,\n  nextDisabled,\n  page,\n}) => (\n  <li className={classNames('page-item', { disabled: nextDisabled })}>\n    <input\n      name=\"next\"\n      onClick={event => togglePrevNext(event, page + 1)}\n      className=\"page-link\"\n      type=\"button\"\n      value=\"Next\"\n    />\n  </li>\n);\n\nNextButton.propTypes = {\n  togglePrevNext: PropTypes.func.isRequired,\n  nextDisabled: PropTypes.bool.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport default NextButton;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Navigation from './Navigation';\nimport Setting from './Setting';\nimport PrevButton from './PrevButton';\nimport NextButton from './NextButton';\n\nlet _ = require('lodash');\n\nclass Pagination extends React.Component {\n  state = {\n    arrPages: [],\n    nextDisabled: false,\n    prevDisable: true,\n    withInfo: false,\n    changedView: false,\n  }\n\n  componentDidMount() {\n    const { page, perPage, total } = this.props;\n\n    this.setState({\n      arrPages: Array(Math.ceil(total / perPage)).fill(1).map((p, index) => {\n        if (index === page) {\n          return {\n            additionalInfo: `${index}-${perPage}`,\n            active: true,\n          };\n        }\n\n        return {\n          additionalInfo: `${(index * perPage)}-${((index + 1) * perPage) > total\n            ? total\n            : ((index + 1) * perPage)}`,\n          active: false,\n        };\n      }),\n    });\n  }\n\n  toggleButtonsChangedQuantity = (event) => {\n    const { onPerPageChange, preparedArrPages, page } = this.props;\n\n    onPerPageChange(event);\n\n    if (page !== 0 || page !== preparedArrPages.length) {\n      this.setState({\n        nextDisabled: page === preparedArrPages.length,\n        prevDisable: page === 0,\n      });\n    }\n  }\n\n  togglePages = (page) => {\n    const { onPageChange, preparedArrPages } = this.props;\n\n    onPageChange(page);\n\n    this.setState({\n      nextDisabled: page === preparedArrPages.length - 1,\n      prevDisable: page === 0,\n    });\n  }\n\n  togglePrevNext = ({ target: { name } }, page) => {\n    const { onPageChange, preparedArrPages } = this.props;\n    const { prevDisable, nextDisabled } = this.state;\n\n    if (name === 'previous' && (page === 0 || page >= 0)) {\n      onPageChange(page);\n    }\n\n    if (name === 'next' && (page === preparedArrPages.length - 1\n      || page !== preparedArrPages.length)) {\n      onPageChange(page);\n    }\n\n    const previousPrevButton = page === 0 || !(page >= 0)\n      ? true\n      : prevDisable;\n    const nextPrevButton = page === 0\n      ? nextDisabled\n      : false;\n    const previousNextButton = page === preparedArrPages.length - 1\n      ? prevDisable\n      : false;\n    const nextNextButton = page === preparedArrPages.length - 1\n    || !(page !== preparedArrPages.length)\n      ? true\n      : nextDisabled;\n\n    this.setState({\n      prevDisable: name === 'previous'\n        ? previousPrevButton\n        : previousNextButton,\n      nextDisabled: name === 'previous'\n        ? nextPrevButton\n        : nextNextButton,\n    });\n  }\n\n  toggleSetting = ({ target: { name } }) => {\n    this.setState(({ withInfo, changedView }) => ({\n      changedView: name === 'changeView' ? !changedView : changedView,\n      withInfo: name === 'withInfo' ? !withInfo : withInfo,\n    }));\n  }\n\n  render() {\n    let { arrPages } = this.state;\n    const {\n      nextDisabled,\n      prevDisable,\n    } = this.state;\n    const {\n      page,\n      perPage,\n      preparedArrPages,\n      total,\n    } = this.props;\n\n    arrPages = preparedArrPages.fill(1).map((p, index) => {\n      if (index === page) {\n        return {\n          additionalInfo: `${(index * perPage)}-\n          ${((index + 1) * perPage) > total\n            ? total\n            : ((index + 1) * perPage)}`,\n          active: true,\n        };\n      }\n\n      return {\n        additionalInfo: `${(index * perPage)}-${((index + 1) * perPage) > total\n          ? total\n          : ((index + 1) * perPage)}`,\n        active: false,\n      };\n    });\n\n    return (\n      <>\n        <Setting\n          toggleSetting={this.toggleSetting}\n          toggleButtonsChangedQuantity={this.toggleButtonsChangedQuantity}\n          perPage={perPage}\n        />\n\n        <nav aria-label=\"page navigation example\">\n          <ul className=\"pagination\">\n\n            <PrevButton\n              togglePrevNext={this.togglePrevNext}\n              page={page}\n              prevDisable={prevDisable}\n            />\n            <Navigation\n              arrPages={arrPages}\n              page={page}\n              state={this.state}\n              togglePages={this.togglePages}\n            />\n            <NextButton\n              togglePrevNext={this.togglePrevNext}\n              page={page}\n              nextDisabled={nextDisabled}\n            />\n\n          </ul>\n        </nav>\n      </>\n    );\n  }\n}\n\nPagination.propTypes = {\n  onPageChange: PropTypes.func.isRequired,\n  onPerPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  preparedArrPages: PropTypes.arrayOf().isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\n\nimport Pagination from './Pagination';\n\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    page: 0,\n    perPage: 5,\n    total: 42,\n  };\n\n  onPageChange = (changedPage) => {\n    this.setState({\n      page: changedPage,\n    });\n  }\n\n  onPerPageChange = ({ target: { value } }) => {\n    this.setState({\n      perPage: value,\n    });\n  }\n\n  render() {\n    const { page, perPage, total } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Pagination\n          total={total}\n          perPage={perPage}\n          page={page}\n          preparedArrPages={Array(Math.ceil(total / perPage))}\n          onPageChange={this.onPageChange}\n          onPerPageChange={this.onPerPageChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}