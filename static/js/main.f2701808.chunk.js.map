{"version":3,"sources":["Pagination.js","App.js","index.js"],"names":["_","require","classNames","Pagination","state","arrPages","nextDisabled","prevDisable","withInfo","changedView","isUnDisable","page","_this$props","_this","props","onPageChange","preparedArrPages","length","setState","nextPage","_this$props2","prevPage","toggleWithInfo","_ref","changeView","_ref2","_this$props3","this","perPage","total","Array","Math","ceil","fill","map","p","index","additionalInfo","concat","active","_this2","_this$state","_this$props4","onPerPageChange","react_default","a","createElement","Fragment","className","onChange","type","event","value","aria-label","disabled","onClick","href","pagen","key","uniqueId","React","Component","App","changedPage","target","src_Pagination","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"4LAIIA,EAAIC,EAAQ,IACVC,EAAaD,EAAQ,IAmTZE,6MAhTbC,MAAQ,CACNC,SAAU,GACVC,cAAc,EACdC,aAAa,EACbC,UAAU,EACVC,aAAa,KAyBfC,YAAc,SAACC,GAAS,IAAAC,EACqBC,EAAKC,MAAxCC,EADcH,EACdG,aAAcC,EADAJ,EACAI,iBAEtBD,EAAaJ,GAEA,IAATA,GAAcA,IAASK,EAAiBC,QAC1CJ,EAAKK,SAAS,CACZZ,cAAc,EACdC,aAAa,OAKnBY,SAAW,SAACR,GAAS,IAAAS,EACwBP,EAAKC,MAAxCC,EADWK,EACXL,aAAcC,EADHI,EACGJ,iBAElBL,IAASK,EAAiBC,OAAS,GACrCF,EAAaJ,GACbE,EAAKK,SAAS,CACZZ,cAAc,KAEPK,IAASK,EAAiBC,QACnCF,EAAaJ,GACbE,EAAKK,SAAS,CACZX,aAAa,KAGfM,EAAKK,SAAS,CACZZ,cAAc,EACdC,aAAa,OAKnBc,SAAW,SAACV,GAAS,IACXI,EAAiBF,EAAKC,MAAtBC,aAEK,IAATJ,GACFI,EAAaJ,GACbE,EAAKK,SAAS,CACZX,aAAa,KAENI,GAAQ,GACjBI,EAAaJ,GAEbE,EAAKK,SAAS,CACZZ,cAAc,KAGhBO,EAAKK,SAAS,CACZX,aAAa,EACbD,cAAc,OAKpBgB,eAAiB,WACfT,EAAKK,SAAS,SAAAK,GAAA,MAAmB,CAC/Bf,UADYe,EAAGf,eAKnBgB,WAAa,WACXX,EAAKK,SAAS,SAAAO,GAAA,MAAsB,CAClChB,aADYgB,EAAGhB,mGArFC,IAAAiB,EACeC,KAAKb,MAA9BH,EADUe,EACVf,KAAMiB,EADIF,EACJE,QAASC,EADLH,EACKG,MAEvBF,KAAKT,SAAS,CACZb,SAAUyB,MAAMC,KAAKC,KAAKH,EAAQD,IAAUK,KAAK,GAAGC,IAAI,SAACC,EAAGC,GAC1D,OAAIA,IAAUzB,EACL,CACL0B,eAAc,GAAAC,OAAKF,EAAL,KAAAE,OAAcV,GAC5BW,QAAQ,GAIL,CACLF,eAAc,GAAAC,OAAMF,EAAQR,EAAd,KAAAU,QAA4BF,EAAQ,GAAKR,EAAWC,EAC9DA,GACEO,EAAQ,GAAKR,GACnBW,QAAQ,wCA0EP,IAAAC,EAAAb,KACDtB,EAAasB,KAAKvB,MAAlBC,SADCoC,EAOHd,KAAKvB,MAJPE,EAHKmC,EAGLnC,aACAC,EAJKkC,EAILlC,YACAC,EALKiC,EAKLjC,SACAC,EANKgC,EAMLhC,YANKiC,EAcHf,KAAKb,MALP6B,EATKD,EASLC,gBACAhC,EAVK+B,EAUL/B,KACAiB,EAXKc,EAWLd,QACAZ,EAZK0B,EAYL1B,iBACAa,EAbKa,EAaLb,MAsBF,OAnBAxB,EAAWW,EAAiBiB,KAAK,GAAGC,IAAI,SAACC,EAAGC,GAC1C,OAAIA,IAAUzB,EACL,CACL0B,eAAc,GAAAC,OAAMF,EAAQR,EAAd,iBAAAU,QACVF,EAAQ,GAAKR,EAAWC,EACxBA,GACEO,EAAQ,GAAKR,GACnBW,QAAQ,GAIL,CACLF,eAAc,GAAAC,OAAMF,EAAQR,EAAd,KAAAU,QAA4BF,EAAQ,GAAKR,EAAWC,EAC9DA,GACEO,EAAQ,GAAKR,GACnBW,QAAQ,KAKVK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,SACEG,SAAUtB,KAAKL,eACf4B,KAAK,WACLF,UAAU,cAEZJ,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,UACEG,SAAU,SAAAE,GAAK,OAAIR,EAAgBQ,IACnCC,MAAOxB,EACPoB,UAAU,WAEVJ,EAAAC,EAAAC,cAAA,UAAQM,MAAM,KAAd,KACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,KAAd,KACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,MAAd,MACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,MAAd,OAEFR,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAb,gBACAJ,EAAAC,EAAAC,cAAA,SACEG,SAAUtB,KAAKH,WACf0B,KAAK,WACLF,UAAU,eAIdJ,EAAAC,EAAAC,cAAA,OAAKO,aAAW,2BACdT,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAW9C,EAAW,YAAa,CAAEoD,SAAU/C,KACjDqC,EAAAC,EAAAC,cAAA,KACES,QAAS,kBAAMf,EAAKnB,SAASV,EAAO,IACpCqC,UAAU,YACVQ,KAAK,KAHP,aAQAnD,EAAS6B,IAAI,SAACuB,EAAOrB,GAAR,OACb3B,EAEImC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEc,IAAVX,GACEQ,EAAAC,EAAAC,cAAA,MACEE,UACE9C,EAAW,YAAa,OACtB,CAAEqC,OAAQH,IAAUzB,IAExB+C,IAAK1D,EAAE2D,SAAS,SAEhBf,EAAAC,EAAAC,cAAA,KACES,QAAS,kBAAMf,EAAK9B,YAAY0B,IAChCY,UAAU,YACVQ,KAAK,KAEJpB,EAAQ,GAEV5B,GAAYoC,EAAAC,EAAAC,cAAA,WAAMW,EAAMpB,iBAM7BD,IAAUzB,EAAO,GACZN,EAASY,OAAS,GACR,IAAVmB,GACAQ,EAAAC,EAAAC,cAAA,iBAIJV,IAAUzB,GACNyB,IAAUzB,EAAO,GACjByB,IAAUzB,EAAO,IACJ,IAAVyB,GAAeA,IAAU/B,EAASY,OAAS,GAE/C2B,EAAAC,EAAAC,cAAA,MACEE,UAAW9C,EAAW,YAAa,OACjC,CAAEqC,OAAQH,IAAUzB,IAEtB+C,IAAK1D,EAAE2D,SAAS,SAEhBf,EAAAC,EAAAC,cAAA,KACES,QAAS,kBAAMf,EAAK9B,YAAY0B,IAChCY,UAAU,YACVQ,KAAK,KAEJpB,EAAQ,GAEV5B,GAAYoC,EAAAC,EAAAC,cAAA,WAAMW,EAAMpB,iBAM/BD,IAAUzB,EAAO,GACZN,EAASY,OAAS,GAClBmB,IAAU/B,EAASY,OAAS,GAC3B2B,EAAAC,EAAAC,cAAA,gBAINV,IAAU/B,EAASY,OAAS,GAC1B2B,EAAAC,EAAAC,cAAA,MACEE,UAAW9C,EAAW,YAAa,OACjC,CAAEqC,OAAQH,IAAUzB,IAEtB+C,IAAK1D,EAAE2D,SAAS,SAEhBf,EAAAC,EAAAC,cAAA,KACES,QAAS,kBAAMf,EAAK9B,YAAY0B,IAChCY,UAAU,YACVQ,KAAK,KAEJpB,EAAQ,GAEV5B,GAAYoC,EAAAC,EAAAC,cAAA,WAAMW,EAAMpB,kBAOjCO,EAAAC,EAAAC,cAAA,MACEE,UAAW9C,EAAW,YAAa,OACjC,CAAEqC,OAAQH,IAAUzB,IAEtB+C,IAAK1D,EAAE2D,SAAS,SAEhBf,EAAAC,EAAAC,cAAA,KACES,QAAS,kBAAMf,EAAK9B,YAAY0B,IAChCY,UAAU,YACVQ,KAAK,KAEJpB,EAAQ,GAEV5B,GACCoC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACZS,EAAMpB,mBAOnBO,EAAAC,EAAAC,cAAA,MAAIE,UAAW9C,EAAW,YAAa,CAAEoD,SAAUhD,KACjDsC,EAAAC,EAAAC,cAAA,KACES,QAAS,kBAAMf,EAAKrB,SAASR,EAAO,IACpCqC,UAAU,YACVQ,KAAK,KAHP,mBAzRWI,IAAMC,WCqChBC,oNArCb1D,MAAQ,CACNO,KAAM,EACNiB,QAAS,EACTC,MAAO,MAGTd,aAAe,SAACgD,GACdlD,EAAKK,SAAS,CACZP,KAAMoD,OAIVpB,gBAAkB,SAAApB,GAA2B,IAAd6B,EAAc7B,EAAxByC,OAAUZ,MAC7BvC,EAAKK,SAAS,CACZU,SAAUwB,EACVzC,KAAM,6EAID,IAAA8B,EAC0Bd,KAAKvB,MAA9BO,EADD8B,EACC9B,KAAMiB,EADPa,EACOb,QAASC,EADhBY,EACgBZ,MAEvB,OACEe,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACmB,EAAD,CACEpC,MAAOA,EACPD,QAASA,EACTjB,KAAMA,EACNK,iBAAkBc,MAAMC,KAAKC,KAAKH,EAAQD,IAC1Cb,aAAcY,KAAKZ,aACnB4B,gBAAiBhB,KAAKgB,0BA/BdiB,IAAMC,YCFxBK,IAASC,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f2701808.chunk.js","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nlet _ = require('lodash');\nconst classNames = require('classnames');\n\nclass Pagination extends React.Component {\n  state = {\n    arrPages: [],\n    nextDisabled: false,\n    prevDisable: true,\n    withInfo: false,\n    changedView: false,\n  }\n\n  componentDidMount() {\n    const { page, perPage, total } = this.props;\n\n    this.setState({\n      arrPages: Array(Math.ceil(total / perPage)).fill(1).map((p, index) => {\n        if (index === page) {\n          return {\n            additionalInfo: `${index}-${perPage}`,\n            active: true,\n          };\n        }\n\n        return {\n          additionalInfo: `${(index * perPage)}-${((index + 1) * perPage) > total\n            ? total\n            : ((index + 1) * perPage)}`,\n          active: false,\n        };\n      }),\n    });\n  }\n\n  isUnDisable = (page) => {\n    const { onPageChange, preparedArrPages } = this.props;\n\n    onPageChange(page);\n\n    if (page !== 0 || page !== preparedArrPages.length) {\n      this.setState({\n        nextDisabled: false,\n        prevDisable: false,\n      });\n    }\n  }\n\n  nextPage = (page) => {\n    const { onPageChange, preparedArrPages } = this.props;\n\n    if (page === preparedArrPages.length - 1) {\n      onPageChange(page);\n      this.setState({\n        nextDisabled: true,\n      });\n    } else if (page !== preparedArrPages.length) {\n      onPageChange(page);\n      this.setState({\n        prevDisable: false,\n      });\n    } else {\n      this.setState({\n        nextDisabled: true,\n        prevDisable: false,\n      });\n    }\n  }\n\n  prevPage = (page) => {\n    const { onPageChange } = this.props;\n\n    if (page === 0) {\n      onPageChange(page);\n      this.setState({\n        prevDisable: true,\n      });\n    } else if (page >= 0) {\n      onPageChange(page);\n\n      this.setState({\n        nextDisabled: false,\n      });\n    } else {\n      this.setState({\n        prevDisable: true,\n        nextDisabled: false,\n      });\n    }\n  }\n\n  toggleWithInfo = () => {\n    this.setState(({ withInfo }) => ({\n      withInfo: !withInfo,\n    }));\n  }\n\n  changeView = () => {\n    this.setState(({ changedView }) => ({\n      changedView: !changedView,\n    }));\n  }\n\n  render() {\n    let { arrPages } = this.state;\n    const {\n      nextDisabled,\n      prevDisable,\n      withInfo,\n      changedView,\n    } = this.state;\n    const {\n      onPerPageChange,\n      page,\n      perPage,\n      preparedArrPages,\n      total,\n    } = this.props;\n\n    arrPages = preparedArrPages.fill(1).map((p, index) => {\n      if (index === page) {\n        return {\n          additionalInfo: `${(index * perPage)}-\n          ${((index + 1) * perPage) > total\n            ? total\n            : ((index + 1) * perPage)}`,\n          active: true,\n        };\n      }\n\n      return {\n        additionalInfo: `${(index * perPage)}-${((index + 1) * perPage) > total\n          ? total\n          : ((index + 1) * perPage)}`,\n        active: false,\n      };\n    });\n\n    return (\n      <>\n        <div className=\"toggle-setting\">\n          <p>Show how many elements on page:</p>\n          <input\n            onChange={this.toggleWithInfo}\n            type=\"checkbox\"\n            className=\"with-info\"\n          />\n          <p>Quantity elements on page:</p>\n          <select\n            onChange={event => onPerPageChange(event)}\n            value={perPage}\n            className=\"repPage\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n          <p className=\"change-view\">Change view:</p>\n          <input\n            onChange={this.changeView}\n            type=\"checkbox\"\n            className=\"with-info\"\n          />\n        </div>\n\n        <nav aria-label=\"page navigation example\">\n          <ul className=\"pagination\">\n            <li className={classNames('page-item', { disabled: prevDisable })}>\n              <a\n                onClick={() => this.prevPage(page - 1)}\n                className=\"page-link\"\n                href=\"#\"\n              >\n                Previous\n              </a>\n            </li>\n            { arrPages.map((pagen, index) => (\n              changedView\n                ? (\n                  <>\n                    {\n                      index === 0 && (\n                        <li\n                          className={\n                            classNames('page-item', 'item',\n                              { active: index === page })\n                          }\n                          key={_.uniqueId('key_')}\n                        >\n                          <a\n                            onClick={() => this.isUnDisable(index)}\n                            className=\"page-link\"\n                            href=\"#\"\n                          >\n                            {index + 1}\n                          </a>\n                          {withInfo && <div>{pagen.additionalInfo}</div>}\n                        </li>\n                      )\n                    }\n\n                    {\n                      index === page - 2\n                        && arrPages.length > 3\n                        && index !== 0\n                        && <p>...</p>\n                    }\n\n                    {\n                      (index === page\n                        || index === page - 1\n                        || index === page + 1)\n                          && (index !== 0 && index !== arrPages.length - 1)\n                        && (\n                          <li\n                            className={classNames('page-item', 'item',\n                              { active: index === page })\n                            }\n                            key={_.uniqueId('key_')}\n                          >\n                            <a\n                              onClick={() => this.isUnDisable(index)}\n                              className=\"page-link\"\n                              href=\"#\"\n                            >\n                              {index + 1}\n                            </a>\n                            {withInfo && <div>{pagen.additionalInfo}</div>}\n                          </li>\n                        )\n                    }\n\n                    {\n                      index === page + 2\n                        && arrPages.length > 3\n                        && index !== arrPages.length - 1\n                        &&  <p>...</p>\n                    }\n\n                    {\n                      index === arrPages.length - 1 && (\n                        <li\n                          className={classNames('page-item', 'item',\n                            { active: index === page })\n                          }\n                          key={_.uniqueId('key_')}\n                        >\n                          <a\n                            onClick={() => this.isUnDisable(index)}\n                            className=\"page-link\"\n                            href=\"#\"\n                          >\n                            {index + 1}\n                          </a>\n                          {withInfo && <div>{pagen.additionalInfo}</div>}\n                        </li>\n                      )\n                    }\n                  </>\n                )\n                : (\n                  <li\n                    className={classNames('page-item', 'item',\n                      { active: index === page })\n                    }\n                    key={_.uniqueId('key_')}\n                  >\n                    <a\n                      onClick={() => this.isUnDisable(index)}\n                      className=\"page-link\"\n                      href=\"#\"\n                    >\n                      {index + 1}\n                    </a>\n                    {withInfo && (\n                      <div className=\"addInfo\">\n                        {pagen.additionalInfo}\n                      </div>\n                    )}\n                  </li>\n                )\n            ))\n            }\n            <li className={classNames('page-item', { disabled: nextDisabled })}>\n              <a\n                onClick={() => this.nextPage(page + 1)}\n                className=\"page-link\"\n                href=\"#\"\n              >\n                Next\n              </a>\n            </li>\n          </ul>\n        </nav>\n      </>\n    );\n  }\n}\n\nPagination.propTypes = {\n  onPageChange: PropTypes.func.isRequired,\n  onPerPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  preparedArrPages: PropTypes.arrayOf().isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\n\nimport Pagination from './Pagination';\n\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    page: 0,\n    perPage: 5,\n    total: 42,\n  };\n\n  onPageChange = (changedPage) => {\n    this.setState({\n      page: changedPage,\n    });\n  }\n\n  onPerPageChange = ({ target: { value } }) => {\n    this.setState({\n      perPage: +value,\n      page: 0,\n    });\n  }\n\n  render() {\n    const { page, perPage, total } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Pagination\n          total={total}\n          perPage={perPage}\n          page={page}\n          preparedArrPages={Array(Math.ceil(total / perPage))}\n          onPageChange={this.onPageChange}\n          onPerPageChange={this.onPerPageChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}